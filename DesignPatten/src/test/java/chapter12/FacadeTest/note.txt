


1.外观模式：
    为子系统中的一组接口提供一个一致的界面，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。
2.Facade 外观类，知道哪些子系统类负责处理请求，将客户的请求代理给适当的子系统对象
  SubSystem 子系统类集合，实现子系统的功能，处理Facade对象指派的任务。
  注意：子类中没有Facade的任何信息，即没有对Facade对象的引用。

使用：
1.在设计之初，应该有意识将不同的两个层分离，层与层之间建立外观Facade;
2.开发阶段，子系统往往因为不断的重构演化而变得越来越复杂，增加外观模式可以提供一个简单的接口，减少它们之间的依赖。
3.维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，为新系统开发一个外观类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，
  让新系统与Facade对象交互，Facade与遗留代码交互所有复杂的工作。