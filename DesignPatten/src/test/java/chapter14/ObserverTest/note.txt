


1.观察者模式又叫做发布/订阅模式
2.观察者模式定义了一种一对多的依赖模式，让多个观察者对象同时监听某一个主题对象。这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。

观察者模式特点：
1.将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。
    我们不希望为了维护一致性而使各类紧密耦合，这样会给维护、扩展和重用都带来不便。
2.观察者模式所做的工作其实就是在接触耦合。让耦合的双方都依赖于抽象，而不是依赖于具体。从而
    使得各自的变化都不会影响另一边的变化。

不足：
抽象通知者还是依赖抽象观察者，每个具体观察者，不一定都有更新（update）的方法；
例如：看股票的观察者和看NBA的观察者收到通知之后更新的方法不一样。

解决办法：事件委托
委托就是一种引用方法的类型。一旦为委托分配了方法，委托将于该方法具有完全相同的行为。
委托方法的使用可以像其他任何方法一样，具有参数和返回值。
委托可以看做是对函数的抽象，是函数的'类'，委托的实例将代表一个具体的函数。
注意：
委托对象所搭载的所有方法必须具有相同的原形和方式，也就是拥有相同的参数列表和返回值类型。