
1.不能修改，但可以扩展的思想；OCP 开放-封闭原则 The Open-Closeed Principle
2.对于扩展是开放的，对于更改是封闭的
3.无论模块是多么的封闭，都会存在一些无法对之封闭的变化。既然不可能完全封闭，设计人员必须对于他设计的模式应该对哪种变化封闭做出选择。
  他必须先猜测出最有可能发生的变化种类，然后构造抽象来隔离那些变化。
4.面对需求，对程序的改动是通过增加新代码进行的，而不是更改现有的代码。
5.我们希望的是在开发工作展开不久就知道可能发生的变化。查明可能发生的变化所等待的时间越长，要创建正确的抽象就越困难。
6.开发人员应该仅对程序中呈现出频繁变化的那些部分作出抽象，然而，对于应用程序中的每个部分都刻意地进行抽象同样不是一个好主意。拒绝不成熟
  的抽象和抽象本身一样重要。