
1.抽象不应该依赖细节，细节应该依赖于抽象。说白了，针对接口编程，不要对实现编程。
2.高层模块不应该依赖低层模块。两个都应该依赖抽象。
3.里氏代换原则（LSP）：子类型必须能够替换掉它们的父类型。
4.依赖倒转其实可以说是面向对象设计的标志，用哪种语言来编程不重要，如果编写时考虑的都是如何针对抽象编程而不是针对细节编程，
  即程序中所有的依赖关系都是终止于抽象类或者接口，那就是面向对象的设计，反之那就是过程化的设计。